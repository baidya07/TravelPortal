name: travelportal
description: A new Flutter project.

# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=2.18.4 <3.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  #  Package to build Material Form with fields like TextField, DropDown, Switches etc.
  #  with ability to create custom FormFields and composability and reuse validation functions.
  #  This package provides common reusable FormFieldValidators for Flutter FormField shared with internationalization
  flutter_form_builder: 7.0.0

  dio: ^4.0.0

  #  Contains code to deal with internationalized/localized messages,
  #  date and number formatting and parsing, bi-directional text, and other internationalization issues.
  intl: ^0.17.0

  hooks_riverpod: ^1.0.3

  #  A flexible widget for user notification.
  #  Customize your text, button, duration, animations and much more.
  #  For Android devs, it is made to replace Snackbars and Toasts.
  another_flushbar: ^1.10.28

  #  Toast Library for Flutter, Easily create toast messages in single line of code
  fluttertoast: ^8.0.8

  #  Flutter plugin for launching a URL on Android and iOS. Supports web, phone, SMS, and email schemes.
  url_launcher: ^6.0.18

  lottie: ^1.2.1 #Render After Effects animations natively on Flutter. This package is a pure Dart implementation of a Lottie player.

  auto_route:

  line_awesome_flutter: ^2.0.0   #The Line Awesome Icons pack for flutter. Provides 1542 additional icons to use in your apps.

  #  Flutter plugin providing detailed information about the device (make, model, etc.), and Android or iOS version the app is running on.
  device_info: ^2.0.3

  #  Flutter Secure Storage provides API to store data in secure storage. Keychain is used in iOS, KeyStore based solution is used in Android.
  flutter_secure_storage:

  #  Sentry SDK for Flutter. This package aims to support different Flutter targets by relying on the many platforms supported by Sentry with native SDKs.
  sentry_flutter: ^6.2.2

  #  Vector design and runtime animation for Flutter.
  flare_flutter: ^3.0.2

  #  An SVG rendering and widget library for Flutter, which allows painting
  #  and displaying Scalable Vector Graphics 1.1 files.
  flutter_svg:

  #  library to load and cache network images. Can also be used with placeholder and error shared.
  cached_network_image: ^3.2.0

  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.2

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^2.0.0

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    - assets/images/
    - assets/images/dummy_images/
    - assets/svg/
    - assets/.env
    - assets/icons/
    - assets/gif/


  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/assets-and-images/#resolution-aware

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/assets-and-images/#from-packages

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/custom-fonts/#from-packages
